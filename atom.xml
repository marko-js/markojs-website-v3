<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://markojs.com/</id>
    <title>Marko</title>
    <updated>2017-03-02T10:10:03Z</updated>
    <author>
        <uri>function link() { [native code] }</uri>
    </author>
    <link rel="alternate" href="http://markojs.com/"/>
    <rights>Â© 2016 eBay, Inc</rights>
    <generator>Feed for Node.js</generator>
    <entry>
        <title type="html"><![CDATA[Announcing Marko v3: From HTML to HTML-JS]]></title>
        <id>http://markojs.com/blog/announcing-marko-v3/</id>
        <link href="http://markojs.com/blog/announcing-marko-v3/">
        </link>
        <updated>2016-03-17T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p>Marko is one of the fastest, lightest and most powerful HTML templating engines for Node.js and the browser, and we are very pleased to see a healthy and growing community. Marko has been <a href="http://npm-stat.com/charts.html?package=marko">downloaded over 100k times</a> in the first few months of 2016, and the project has a very active <a href="https://gitter.im/marko-js/marko">Gitter chat room</a>. We are excited to announce some huge improvements to the Marko templating engine as part of the v3 release.</p>
<p>First off, a huge thanks to all of the contributors who have provided code and feedback for the amazing Marko v3 release (see <a href="https://github.com/marko-js/marko/issues/90">#90</a>, <a href="https://github.com/marko-js/marko/issues/211">#211</a>, especially <a href="https://github.com/adammcarth">Adam McArthur</a>, <a href="https://github.com/vedam">Achim Vedam</a>, <a href="https://github.com/BryceEWatson">Bryce Watson</a>, <a href="https://github.com/DanCech">Dan Cech</a>, <a href="https://github.com/danrichman">Dan Richman</a>, <a href="https://github.com/kristianmandrup">Kristian Mandrup</a>, <a href="https://github.com/onemrkarthik">@onemrkarthik</a>, <a href="https://github.com/philidem">Phillip Gates-Idem</a>, <a href="https://github.com/pswar">Sathish Pottavathini</a>, <a href="https://github.com/crsandeep">Sandeep Raveesh</a>, <a href="https://github.com/scttdavs">Scott Davis</a>, <a href="https://github.com/seangates">Sean Gates</a>, <a href="https://github.com/SunnyGurnani">Sunny Gurnani</a>, <a href="https://github.com/tindli">@tindli</a> and <a href="https://github.com/yomed">Yoni Medoff</a>)! Extra thanks to <a href="https://github.com/philidem">Phillip Gates-Idem</a> for taking on the arduous task of building the new <a href="https://github.com/philidem/htmljs-parser">htmljs-parser</a> used by Marko v3.</p>
<p>For Marko v2 users, you can use the <a href="https://github.com/marko-js/marko-migrate">marko-migrate</a> tool to automatically migrate your Marko v2 templates to use the new Marko v3 syntax.</p>
<p>For a complete list of what changed in Marko v3, please read <a href="/docs/marko/what-is-new-marko-v3/">What&#39;s New in Marko v3</a>.</p>
<p><a href="http://markojs.com/blog/announcing-marko-v3/">Continue Reading on http://markojs.com/ &raquo;</a></p>]]></summary>
        <author>
            <name>Patrick Steele-Idem</name>
            <email>pnidem@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Closer Look at Marko Widgets]]></title>
        <id>http://markojs.com/blog/a-closer-look-at-marko-widgets/</id>
        <link href="http://markojs.com/blog/a-closer-look-at-marko-widgets/">
        </link>
        <updated>2015-09-05T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p>Marko Widgets is a minimalist library for building UI components with the help of the <a href="/docs/">Marko templating engine</a>. Marko is a <a href="https://github.com/marko-js/templating-benchmarks">fast</a> and lightweight (~4 KB gzipped) HTML-based templating engine that compiles templates to <a href="https://gist.github.com/patrick-steele-idem/0514b480219d1c9ed8d4#file-template-marko-js">readable CommonJS modules</a> and supports <a href="http://www.ebaytechblog.com/2014/12/08/async-fragments-rediscovering-progressive-html-rendering-with-marko/">streaming</a>, async rendering and custom tags. Marko is used for rendering the HTML for UI components, while Marko Widgets is used to add client-side behavior. Client-side behavior includes the following:</p>
<ul>
<li>Handling DOM events</li>
<li>Emitting custom events</li>
<li>Handling custom events emitted by other widgets</li>
<li>Manipulating and updating the DOM</li>
</ul>
<p>We call the client-side behavior of a UI component the <em>widget</em>.</p>
<p>Applications can use the Marko templating engine as a general purpose HTML templating engine. In places where client-side behavior is needed, a developer can easily bind a <em>widget</em> to an HTML element. When a rendered UI component is mounted to the DOM, Marko Widgets will take care of creating a widget instance and binding it to the root HTML element of the UI component. The <code>w-bind</code> attribute is used to associate an HTML element with a JavaScript module that exports the widget functionality as shown below:</p>
<p><em>src/components/click-count/template.marko</em></p>
<pre class="editor editor-colors"><div class="line"><span class="text marko"><span>&lt;</span><span class="entity name tag html"><span>div</span></span><span>&nbsp;</span><span class="support function marko-attribute"><span>w-bind</span></span><span class="punctuation separator key-value html"><span>=</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>./index.js</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&gt;</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span class="entity name tag html"><span>div</span></span><span>&gt;</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;You&nbsp;clicked&nbsp;the&nbsp;button&nbsp;</span><span class="meta section marko-placeholder"><span class="keyword operator js"><span>${</span></span><span>data.clickCount</span><span class="keyword operator js"><span>}</span></span></span><span>&nbsp;</span><span class="meta section marko-placeholder"><span class="keyword operator js"><span>${</span></span><span>data.timesMessage</span><span class="keyword operator js"><span>}</span></span></span><span>.</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span class="entity name tag html"><span>div</span></span><span>&gt;</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span class="entity name tag html"><span>button</span></span><span>&nbsp;</span><span class="entity other attribute-name html"><span>type</span></span><span class="punctuation separator key-value html"><span>=</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>button</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&nbsp;</span><span class="support function marko-attribute"><span>w-onClick</span></span><span class="punctuation separator key-value html"><span>=</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>handleButtonClick</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&gt;</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Click&nbsp;Me</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;/</span><span class="entity name tag html"><span>button</span></span><span>&gt;</span></span></div><div class="line"><span class="text marko"><span>&lt;/</span><span class="entity name tag html"><span>div</span></span><span>&gt;</span></span></div></pre><p>The Marko template serves as the <em>view</em> for the UI component whereas the behavior and rendering logic are placed in a separate JavaScript module file as shown below:</p>
<p><em>src/components/click-count/index.js</em></p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="support variable js"><span>module</span></span><span class="meta delimiter property period js"><span>.</span></span><span class="variable other property js"><span>exports</span></span><span>&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>marko-widgets</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span><span class="meta method-call js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>defineComponent</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;The&nbsp;template&nbsp;to&nbsp;use&nbsp;as&nbsp;the&nbsp;view</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;template</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>./template.marko</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Return&nbsp;the&nbsp;initial&nbsp;state&nbsp;for&nbsp;the&nbsp;UI&nbsp;component&nbsp;based&nbsp;on</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;the&nbsp;input&nbsp;properties&nbsp;that&nbsp;were&nbsp;provided.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function json js"><span class="entity name function js"><span>getInitialState</span></span><span class="keyword operator assignment js"><span>:</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="meta parameters js"><span class="punctuation definition parameters begin bracket round js"><span>(</span></span><span class="variable parameter function js"><span>input</span></span><span class="punctuation definition parameters end bracket round js"><span>)</span></span></span></span><span>&nbsp;</span><span class="punctuation definition function body begin bracket curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clickCount</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="constant numeric decimal js"><span>0</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition function body end bracket curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Return&nbsp;an&nbsp;object&nbsp;that&nbsp;is&nbsp;used&nbsp;as&nbsp;the&nbsp;template&nbsp;data.&nbsp;The</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;template&nbsp;data&nbsp;should&nbsp;be&nbsp;based&nbsp;on&nbsp;the&nbsp;current&nbsp;widget&nbsp;state</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;that&nbsp;is&nbsp;passed&nbsp;in&nbsp;as&nbsp;the&nbsp;first&nbsp;argument</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function json js"><span class="entity name function js"><span>getTemplateData</span></span><span class="keyword operator assignment js"><span>:</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="meta parameters js"><span class="punctuation definition parameters begin bracket round js"><span>(</span></span><span class="variable parameter function js"><span>state</span></span><span class="punctuation definition parameters end bracket round js"><span>)</span></span></span></span><span>&nbsp;</span><span class="punctuation definition function body begin bracket curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type var js"><span>var</span></span><span>&nbsp;clickCount&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="variable other object js"><span>state</span></span><span class="meta delimiter property period js"><span>.</span></span><span class="variable other property js"><span>clickCount</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type var js"><span>var</span></span><span>&nbsp;timesMessage&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;clickCount&nbsp;</span><span class="keyword operator comparison js"><span>===</span></span><span>&nbsp;</span><span class="constant numeric decimal js"><span>1</span></span><span>&nbsp;</span><span class="keyword operator js"><span>?</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>time</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span>&nbsp;</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;</span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>times</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="keyword control js"><span>return</span></span><span>&nbsp;</span><span class="meta brace curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clickCount</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;clickCount</span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timesMessage</span><span class="keyword operator js"><span>:</span></span><span>&nbsp;timesMessage</span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition function body end bracket curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;This&nbsp;is&nbsp;the&nbsp;constructor&nbsp;for&nbsp;the&nbsp;widget.&nbsp;Called&nbsp;once&nbsp;when&nbsp;the&nbsp;UI</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;component&nbsp;is&nbsp;first&nbsp;mounted&nbsp;to&nbsp;the&nbsp;DOM.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function json js"><span class="entity name function js"><span>init</span></span><span class="keyword operator assignment js"><span>:</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="meta parameters js"><span class="punctuation definition parameters begin bracket round js"><span>(</span></span><span class="punctuation definition parameters end bracket round js"><span>)</span></span></span></span><span>&nbsp;</span><span class="punctuation definition function body begin bracket curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="storage type var js"><span>var</span></span><span>&nbsp;el&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="variable language js"><span>this</span></span><span class="meta delimiter property period js"><span>.</span></span><span class="variable other property js"><span>el</span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;&quot;el&quot;&nbsp;will&nbsp;be&nbsp;reference&nbsp;the&nbsp;raw&nbsp;HTML&nbsp;element&nbsp;that&nbsp;this</span><span>&nbsp;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="punctuation whitespace comment leading js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class="comment line double-slash js"><span class="punctuation definition comment js"><span>//</span></span><span>&nbsp;widget&nbsp;is&nbsp;bound&nbsp;to.&nbsp;You&nbsp;can&nbsp;do&nbsp;whatever&nbsp;you&nbsp;want&nbsp;with&nbsp;it...</span><span>&nbsp;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition function body end bracket curly js"><span>}</span></span><span class="meta delimiter object comma js"><span>,</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;</span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="comment block documentation js"><span class="punctuation definition comment js"><span>/**</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;Handler&nbsp;method&nbsp;for&nbsp;the&nbsp;button&nbsp;&quot;click&quot;&nbsp;event.&nbsp;This&nbsp;method&nbsp;name</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;matches&nbsp;the&nbsp;name&nbsp;of&nbsp;the&nbsp;`w-onClick`&nbsp;attribute&nbsp;in&nbsp;the&nbsp;earlier</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;template.</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="comment block documentation js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta function json js"><span class="entity name function js"><span>handleButtonClick</span></span><span class="keyword operator assignment js"><span>:</span></span><span>&nbsp;</span><span class="storage type function js"><span>function</span></span><span class="meta parameters js"><span class="punctuation definition parameters begin bracket round js"><span>(</span></span><span class="support class js"><span>event</span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="variable parameter function js"><span>el</span></span><span class="punctuation definition parameters end bracket round js"><span>)</span></span></span></span><span>&nbsp;</span><span class="punctuation definition function body begin bracket curly js"><span>{</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="variable language js"><span>this</span></span><span class="meta method-call js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>setState</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>clickCount</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="meta delimiter object comma js"><span>,</span></span><span>&nbsp;</span><span class="variable language js"><span>this</span></span><span class="meta delimiter property period js"><span>.</span></span><span class="variable other property js"><span>state</span></span><span class="meta delimiter property period js"><span>.</span></span><span class="variable other property js"><span>clickCount</span></span><span>&nbsp;</span><span class="keyword operator js"><span>+</span></span><span>&nbsp;</span><span class="constant numeric decimal js"><span>1</span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="punctuation definition function body end bracket curly js"><span>}</span></span></span></span></span></div><div class="line"><span class="source js"><span class="meta method-call js"><span class="meta arguments js"><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>The <code>require(&#39;marko-widgets&#39;).defineComponent(def)</code> function is used to define a UI component that includes both client-side behavior (i.e., the <em>widget</em>) and rendering logic (i.e., the <em>renderer</em>). That function returns a widget constructor function that also includes a static <code>render(input)</code> method. The returned function will also have a static <code>renderer(input, out)</code> method that can be used as a <a href="/docs/marko/custom-taglibs/#tag-renderer">Marko custom tag renderer</a>.</p>
<p>The above UI component can be rendered in the browser and added to the DOM using code similar to the following:</p>
<pre class="editor editor-colors"><div class="line"><span class="source js"><span class="storage type var js"><span>var</span></span><span>&nbsp;clickCount&nbsp;</span><span class="keyword operator assignment js"><span>=</span></span><span>&nbsp;</span><span class="meta function-call js"><span class="support function js"><span>require</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="string quoted single js"><span class="punctuation definition string begin js"><span>&#39;</span></span><span>./src/components/click-count</span><span class="punctuation definition string end js"><span>&#39;</span></span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div><div class="line"><span class="source js"><span class="variable other object js"><span>clickCount</span></span><span class="meta method-call js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>render</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="meta brace curly js"><span>{</span></span><span>&nbsp;</span><span class="comment block js"><span class="punctuation definition comment js"><span>/*</span></span><span>&nbsp;input&nbsp;props&nbsp;</span><span class="punctuation definition comment js"><span>*/</span></span></span><span>&nbsp;</span><span class="meta brace curly js"><span>}</span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span></span></div><div class="line"><span class="source js"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="meta method-call js"><span class="meta delimiter method period js"><span>.</span></span><span class="entity name function js"><span>appendTo</span></span><span class="meta arguments js"><span class="punctuation definition arguments begin bracket round js"><span>(</span></span><span class="support class js"><span>document</span></span><span class="meta delimiter property period js"><span>.</span></span><span class="support constant dom js"><span>body</span></span><span class="punctuation definition arguments end bracket round js"><span>)</span></span></span></span><span class="punctuation terminator statement js"><span>;</span></span></span></div></pre><p>After the UI component is rendered and after the HTML output (based on the given template) is inserted into the DOM, a new instance of the widget is created and bound to the corresponding html element. The <code>init()</code> method is the first method called when a widget has been created and mounted to the DOM. The <code>this.el</code> property can be used to get access to the raw DOM element that a widget is bound to.</p>
<p>Instead of rendering the component using the JavaScript API, the same UI component can also be embedded in a Marko template using a custom tag as shown below:</p>
<pre class="editor editor-colors"><div class="line"><span class="text marko"><span>&lt;</span><span class="entity name tag html"><span>div</span></span><span>&nbsp;</span><span class="entity other attribute-name html"><span>class</span></span><span class="punctuation separator key-value html"><span>=</span></span><span class="string quoted double js"><span class="punctuation definition string begin js"><span>&quot;</span></span><span>my-app</span><span class="punctuation definition string end js"><span>&quot;</span></span></span><span>&gt;</span></span></div><div class="line"><span class="text marko"><span>&nbsp;&nbsp;&nbsp;&nbsp;</span><span>&lt;</span><span class="support function marko-tag html"><span>click-count</span></span><span>&nbsp;</span><span>/&gt;</span></span></div><div class="line"><span class="text marko"><span>&lt;/</span><span class="entity name tag html"><span>div</span></span><span>&gt;</span></span></div></pre><p>The above template with the embedded <code>&lt;click-count&gt;</code> tag can be rendered on the server or in the browser giving web applications an isomorphic character. For more examples and to try out UI components in a live editor, please check out the <a href="/marko-widgets/try-online" target="_blank">Try Marko Widgets Online</a> page.</p>
<p><a href="http://markojs.com/blog/a-closer-look-at-marko-widgets/">Continue Reading on http://markojs.com/ &raquo;</a></p>]]></summary>
        <author>
            <name>Patrick Steele-Idem</name>
            <email>pnidem@gmail.com</email>
        </author>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing Marko Widgets v5]]></title>
        <id>http://markojs.com/blog/marko-widgets-v50-announcement/</id>
        <link href="http://markojs.com/blog/marko-widgets-v50-announcement/">
        </link>
        <updated>2015-09-05T06:00:00Z</updated>
        <summary type="html"><![CDATA[<p>The release of Marko Widgets v5 introduces some exciting new features that improve how the DOM is updated. The highlight of this release is that Marko Widgets now uses DOM diffing/patching to update the DOM by integrating the <a href="https://github.com/patrick-steele-idem/morphdom">morphdom</a> module. We intentionally omitted the &quot;virtual&quot; part because <code>morphdom</code> does diffing between <em>real</em> DOM nodes. We found it beneficial to not go the &quot;virtual&quot; route for the following reasons:</p>
<ul>
<li>The real DOM is the source of truth so there is no need to have a persistent copy of the actual DOM in memory at all times</li>
<li>Our benchmarks  showed that using the real DOM is plenty fast (for example, &lt;0.5ms to update Todo MVC view, see <a href="https://github.com/patrick-steele-idem/marko-vs-react">Marko vs React</a> and <a href="https://github.com/patrick-steele-idem/morphdom#benchmarks">morphdom Â» Benchmarks</a>)</li>
<li>Less layers of abstraction</li>
<li>A virtual DOM solution can only be used with code/templates that produce a virtual DOM tree and...</li>
<li>Creating and rendering a virtual DOM tree on the server is much slower than rendering HTML on the server (Our <a href="https://github.com/patrick-steele-idem/marko-vs-react">Marko vs React</a> and <a href="https://github.com/patrick-steele-idem/morphdom#benchmarks">morphdom Â» Benchmarks</a> benchmark showed that Marko Widgets is 10x faster than React in rendering a page of 100 search results on the server)</li>
<li>Also, by using the real DOM, UI components can manually manipulate the DOM and diffing/patching will still work.</li>
</ul>
<p><a href="http://markojs.com/blog/marko-widgets-v50-announcement/">Continue Reading on http://markojs.com/ &raquo;</a></p>]]></summary>
        <author>
            <name>Patrick Steele-Idem</name>
            <email>pnidem@gmail.com</email>
        </author>
    </entry>
</feed>